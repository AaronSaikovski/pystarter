# MIT License

# Copyright (c) 2025 Aaron Saikovski

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# https://taskfile.dev

version: "3"

#ENV VARS
env:
  PROJECT_NAME: "pystarter"
  PYTHON_VERSION: "3.13" #">=3.13,<3.13"

###############################################################################

tasks:
  ## default - Default cmd - create
  default:
    deps: [create]
    desc: "Call Create as default cmd."

  ###########################################################################

  ## create - Inits the poetry virtual environment and installs baseline packages
  create:
    desc: "Inits the python project using UV and creates and activates a new virtual environment."
    cmds:
      - uv init --author-from auto --no-readme --color auto --python $PYTHON_VERSION --name $PROJECT_NAME
      - uv venv
      - task deps
      - task activate
      - cmd /c "type pyproject_base.toml >> pyproject.toml || exit 0"
      - cmd /c "del /q hello.py || exit 0"
      - cmd /c "del /q main.py || exit 0"

  ###########################################################################

  ## deps - Install the dependencies.
  deps:
    desc: "Install the dependencies."
    deps: [activate]
    cmds:
      # - uv add pytest isort ruff bandit mypy python-dotenv aiofiles types-aiofiles
      # - uv add nest_asyncio structlog pydantic
      # - uv tool upgrade --all
      - uv add -r requirements.txt
      - uv tool upgrade --all

  ###########################################################################

  ## activate - Activates the virtual environment.
  activate:
    desc: "Activates the virtual environment."
    cmds:
      - .venv\\Scripts\\activate

  ###########################################################################

  ## run - Run the script main.py.
  run:
    desc: "Run the script main.py."
    deps: [activate]
    cmds:
      - uv run -m $PROJECT_NAME

  ###########################################################################

  # clean - Cleans the environment, Overwrites the pyproject.toml file.
  clean:
    desc: "Cleans the environment, Overwrites the pyproject.toml file."
    cmds:
      - cmd /c "rmdir /s /q .venv || exit 0"
      - cmd /c "rmdir /s /q .mypy_cache || exit 0"
      - cmd /c "rmdir /s /q dist || exit 0"
      - cmd /c "rmdir /s /q .ruff_cache || exit 0"
      - cmd /c "rmdir /s /q .pytest_cache || exit 0"
      - powershell -Command "Get-ChildItem -Path . -Filter '__pycache__' -Recurse -Directory | Remove-Item -Recurse -Force"
      - cmd /c "del /q .python-version || exit 0"
      - cmd /c "del /q uv.lock || exit 0"
      - cmd /c "del /q pyproject.toml || exit 0"

  #############################################################################

  ## test - Tests the project.
  test:
    desc: "Tests the project."
    deps: [activate]
    cmds:
      - uv tool run pytest

  ###########################################################################

  ## update - updates dependency versions.
  update:
    desc: "updates dependency versions."
    deps: [activate]
    cmds:
      - uv tool upgrade --all

  ###########################################################################

  ## lint - Lints the project and type checks the project.
  lint:
    desc: "Lints the project and performs type checking."
    deps: [activate]
    cmds:
      - uv tool run isort .
      - uv tool run ruff check . --fix
      - uv tool run ruff format .
      - uv tool run mypy --check-untyped-defs --ignore-missing-imports .

  ###########################################################################

  ## seccheck - Checks for vulnerabilities in the project.
  seccheck:
    desc: "Checks for vulnerabilities in the project."
    cmds:
      - uv tool run bandit -r .

  ###########################################################################

  ## build - uses uv build to package your Python application into a single package.
  build:
    desc: "uses uv build to package your Python application into a single package."
    deps: [activate]
    cmds:
      - uv build


  ###########################################################################

  ## reqs - Lock dependencies declared in a pyproject.toml to requirements.txt.
  reqs:
    desc: "Lock dependencies declared in a pyproject.toml to requirements.txt."
    deps: [activate]
    cmds:
      - cmd /c "del /q requirements.txt || exit 0"
      - uv pip compile pyproject.toml -o requirements.txt

  ###############################################################################

  ## docker-build - builds a docker image based on the docker file.
  docker-build:
    desc: "builds a docker image based on the docker fil.e"
    deps: [deps]
    cmds:
      - docker build --platform linux/arm64 -t $PROJECT_NAME:latest .

  ###############################################################################

  ## docker-run - runs the docker container.
  docker-run:
    desc: "builds a docker image based on the docker file."
    #deps: [docker-build]
    cmds:
      - docker run $PROJECT_NAME:latest

  ###############################################################################


  ## dist - Executes pyinstaller for creating a self contained exe.
  dist:
    desc: "Runs Pyinstaller to create a self-contained executable."
    deps: [activate]
    cmds:
      - uv run pyinstaller src/$PROJECT_NAME/__main__.py --onefile  --name $PROJECT_NAME --clean

  ###############################################################################
